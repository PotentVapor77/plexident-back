# Generated by Django 5.1.6 on 2025-10-27 03:57

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AreaAfectada',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=50, unique=True)),
                ('nombre', models.CharField(max_length=100)),
                ('activo', models.BooleanField(default=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_modificacion', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Área Afectada',
                'verbose_name_plural': 'Áreas Afectadas',
                'db_table': 'odonto_area_afectada',
            },
        ),
        migrations.CreateModel(
            name='CategoriaDiagnostico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=50, unique=True)),
                ('nombre', models.CharField(max_length=100)),
                ('color_key', models.CharField(max_length=7)),
                ('prioridad_key', models.CharField(max_length=50)),
                ('activo', models.BooleanField(default=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_modificacion', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Categoría de Diagnóstico',
                'verbose_name_plural': 'Categorías de Diagnóstico',
                'db_table': 'odonto_categoria_diagnostico',
            },
        ),
        migrations.CreateModel(
            name='Paciente',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('nombres', models.CharField(max_length=100)),
                ('apellidos', models.CharField(max_length=100)),
                ('cedula', models.CharField(max_length=20, unique=True)),
                ('fecha_nacimiento', models.DateField(blank=True, null=True)),
                ('telefono', models.CharField(blank=True, max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('direccion', models.TextField(blank=True)),
                ('fecha_registro', models.DateTimeField(auto_now_add=True)),
                ('activo', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Paciente',
                'verbose_name_plural': 'Pacientes',
                'db_table': 'pacientes',
                'ordering': ['apellidos', 'nombres'],
            },
        ),
        migrations.CreateModel(
            name='TipoAtributoClinico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=50, unique=True)),
                ('nombre', models.CharField(max_length=100)),
                ('descripcion', models.TextField(blank=True)),
                ('activo', models.BooleanField(default=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_modificacion', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Tipo de Atributo Clínico',
                'verbose_name_plural': 'Tipos de Atributos Clínicos',
                'db_table': 'odonto_tipo_atributo_clinico',
            },
        ),
        migrations.CreateModel(
            name='Diagnostico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=50, unique=True)),
                ('nombre', models.CharField(max_length=100)),
                ('siglas', models.CharField(blank=True, max_length=10)),
                ('simbolo_color', models.CharField(max_length=50)),
                ('prioridad', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('activo', models.BooleanField(default=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_modificacion', models.DateTimeField(auto_now=True)),
                ('categoria', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='diagnosticos', to='odontogram.categoriadiagnostico')),
            ],
            options={
                'verbose_name': 'Diagnóstico',
                'verbose_name_plural': 'Diagnósticos',
                'db_table': 'odonto_diagnostico',
            },
        ),
        migrations.CreateModel(
            name='Diente',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('codigo_fdi', models.CharField(help_text='Código FDI del diente (ej: 11, 36, 48)', max_length=2)),
                ('nombre', models.CharField(blank=True, help_text='Nombre descriptivo opcional (ej: Primer molar inferior izquierdo)', max_length=100)),
                ('ausente', models.BooleanField(default=False, help_text='Marca si el diente está ausente/extraccionado')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_modificacion', models.DateTimeField(auto_now=True)),
                ('paciente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dientes', to='odontogram.paciente')),
            ],
            options={
                'verbose_name': 'Diente',
                'verbose_name_plural': 'Dientes',
                'db_table': 'odonto_diente',
                'ordering': ['codigo_fdi'],
                'unique_together': {('paciente', 'codigo_fdi')},
            },
        ),
        migrations.CreateModel(
            name='SuperficieDental',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('nombre', models.CharField(choices=[('vestibular', 'Vestibular'), ('lingual', 'Lingual/Palatina'), ('oclusal', 'Oclusal/Incisal'), ('mesial', 'Mesial'), ('distal', 'Distal'), ('raiz_mesial', 'Raíz Mesial'), ('raiz_distal', 'Raíz Distal'), ('raiz_palatal', 'Raíz Palatina'), ('raiz_vestibular', 'Raíz Vestibular'), ('raiz_principal', 'Raíz Principal')], max_length=50)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_modificacion', models.DateTimeField(auto_now=True)),
                ('diente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='superficies', to='odontogram.diente')),
            ],
            options={
                'verbose_name': 'Superficie Dental',
                'verbose_name_plural': 'Superficies Dentales',
                'db_table': 'odonto_superficie_dental',
                'unique_together': {('diente', 'nombre')},
            },
        ),
        migrations.CreateModel(
            name='DiagnosticoAreaAfectada',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='diagnosticos_relacionados', to='odontogram.areaafectada')),
                ('diagnostico', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='areas_relacionadas', to='odontogram.diagnostico')),
            ],
            options={
                'db_table': 'odonto_diagnostico_area',
                'unique_together': {('diagnostico', 'area')},
            },
        ),
        migrations.CreateModel(
            name='HistorialOdontograma',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('tipo_cambio', models.CharField(choices=[('diagnostico_agregado', 'Diagnóstico Agregado'), ('diagnostico_modificado', 'Diagnóstico Modificado'), ('diagnostico_eliminado', 'Diagnóstico Eliminado'), ('diente_marcado_ausente', 'Diente Marcado como Ausente'), ('diente_restaurado', 'Diente Restaurado'), ('nota_agregada', 'Nota Agregada')], max_length=50)),
                ('descripcion', models.TextField(help_text='Descripción del cambio')),
                ('fecha', models.DateTimeField(auto_now_add=True)),
                ('datos_anteriores', models.JSONField(blank=True, default=dict, help_text='Estado anterior (para auditoría)')),
                ('datos_nuevos', models.JSONField(blank=True, default=dict, help_text='Estado nuevo (para auditoría)')),
                ('diente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='historial', to='odontogram.diente')),
                ('odontologo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='cambios_odontograma', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Historial Odontograma',
                'verbose_name_plural': 'Historial Odontogramas',
                'db_table': 'odonto_historial_odontograma',
                'ordering': ['-fecha'],
                'indexes': [models.Index(fields=['diente'], name='odonto_hist_diente__130ee4_idx'), models.Index(fields=['fecha'], name='odonto_hist_fecha_96bed3_idx'), models.Index(fields=['odontologo'], name='odonto_hist_odontol_6a23a8_idx')],
            },
        ),
        migrations.CreateModel(
            name='DiagnosticoDental',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('descripcion', models.TextField(blank=True, help_text='Descripción adicional o notas del odontólogo')),
                ('atributos_clinicos', models.JSONField(blank=True, default=dict, help_text="Opciones secundarias seleccionadas (ej: {material: 'resina', estado: 'buena'})")),
                ('prioridad_asignada', models.IntegerField(blank=True, help_text='Prioridad específica de este diagnóstico (si difiere del catálogo)', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('estado_tratamiento', models.CharField(choices=[('diagnosticado', 'Diagnosticado'), ('en_tratamiento', 'En Tratamiento'), ('tratado', 'Tratado'), ('cancelado', 'Cancelado')], default='diagnosticado', max_length=20)),
                ('fecha', models.DateTimeField(auto_now_add=True, help_text='Fecha del diagnóstico')),
                ('fecha_modificacion', models.DateTimeField(auto_now=True)),
                ('fecha_tratamiento', models.DateTimeField(blank=True, null=True)),
                ('activo', models.BooleanField(default=True)),
                ('diagnostico_catalogo', models.ForeignKey(help_text='Referencia al catálogo de diagnósticos', on_delete=django.db.models.deletion.PROTECT, related_name='instancias_aplicadas', to='odontogram.diagnostico')),
                ('odontologo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='diagnosticos_registrados', to=settings.AUTH_USER_MODEL)),
                ('superficie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='diagnosticos', to='odontogram.superficiedental')),
            ],
            options={
                'verbose_name': 'Diagnóstico Dental',
                'verbose_name_plural': 'Diagnósticos Dentales',
                'db_table': 'odonto_diagnostico_dental',
                'ordering': ['-fecha'],
                'indexes': [models.Index(fields=['superficie'], name='odonto_diag_superfi_3f28e2_idx'), models.Index(fields=['estado_tratamiento'], name='odonto_diag_estado__b47547_idx'), models.Index(fields=['fecha'], name='odonto_diag_fecha_03ac3c_idx')],
            },
        ),
        migrations.CreateModel(
            name='OpcionAtributoClinico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=50)),
                ('nombre', models.CharField(max_length=100)),
                ('prioridad', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('orden', models.IntegerField(default=0)),
                ('activo', models.BooleanField(default=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_modificacion', models.DateTimeField(auto_now=True)),
                ('tipo_atributo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='opciones', to='odontogram.tipoatributoclinico')),
            ],
            options={
                'verbose_name': 'Opción de Atributo Clínico',
                'verbose_name_plural': 'Opciones de Atributos Clínicos',
                'db_table': 'odonto_opcion_atributo_clinico',
                'unique_together': {('tipo_atributo', 'key')},
            },
        ),
        migrations.CreateModel(
            name='DiagnosticoAtributoClinico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('diagnostico', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='atributos_aplicables', to='odontogram.diagnostico')),
                ('tipo_atributo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='diagnosticos_aplicables', to='odontogram.tipoatributoclinico')),
            ],
            options={
                'db_table': 'odonto_diagnostico_atributo',
                'unique_together': {('diagnostico', 'tipo_atributo')},
            },
        ),
    ]
